<div class="row portfolio-container">
  <div class="col-sm-4 left-arrow-container">
  <%= link_to image_tag('left_arrow.png', class: 'arrow-img'), root_path, class: 'arrow' %>
  </div>
  <div class="col-sm-4 page-header-container">
    <h1><span id="page-header">portfolio</span></h1>
  </div>
  <div class="col-sm-4 right-arrow-container">
    <%= link_to image_tag('right_arrow.png', class: 'arrow-img'), about_path, class: 'arrow' %>
  </div>

  <div class="col-sm-6 piece-container" id="zeto">
    <button class="btn piece-btn" data-toggle="modal" data-target="#zetoModal">
      <h2 class="piece-header">zeto</h2>
    </button>
  </div>

  <div class="col-sm-6 piece-container" id="sixtwelve">
    <button class="btn piece-btn" data-toggle="modal" data-target="#sixTwelveModal">
      <h2 class="piece-header">sixtwelve</h2>
    </button>
  </div>

  <div class="col-sm-6 piece-container" id="minesweeper">
    <button class="btn piece-btn" data-toggle="modal" data-target="#minesweeperModal">
      <h3 class="piece-header">minesweeper</h3>
    </button>
  </div>

  <div class="col-sm-6 piece-container" id="blackjack">
    <button class="btn piece-btn" data-toggle="modal" data-target="#blackJackModal">
      <h2 class="piece-header">blackjack</h2>
    </button>
  </div>

  <!-- Modals -->

  <div class="modal fade" id="zetoModal" tabindex="-1" role="dialog" aria-labelledby="zetoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
          <h4 class="modal-title" id="zetoModalLabel">zeto</h4>
        </div>
        <div class="modal-body">
          <div class="row">
            <div class="col-xs-8 col-xs-offset-2 piece-summary-container">
              <h1>Summary</h1>
              <p>
                My most recent project is called zeto. The problem I wanted to address with zeto was that Launch Academy, a 10 week immersive bootcamp, had no cohesive network for all students to connect with one another. So I created zeto, a medium for past, present and future students of Launch Academy to connect and more importantly stay connected. Zeto was built with Rails, Ruby, HTML, CSS, SASS, JavaScript, jQuery, Ajax along with Facebook omniauth, Mapbox and JSON. The github repository link is: <a href="github.com/lchangdev/zeto-la"><span class="paragraph-link">zeto github repository</span></a>. The live web application can be found here: <a href="http://zeto-la.herokuapp.com"><span class="paragraph-link">zeto</span></a>.
              </p>
            </div>
            <div class="col-xs-8 col-xs-offset-2 piece-summary-container">
              <p>
                Users are able to see a list of all past, present and future launchers as well as hiriing partners and launch staff. Features on zeto include a search bar which allows users to search for launchers and posts via city or state. Also, users are able to sort by name or cohort.
              </p>
            </div>
            <div class="col-xs-10 col-xs-offset-1 zeto-gallery1">
            </div>
            <div class="col-xs-8 col-xs-offset-2 piece-summary-container">
              <p>
                Rather than going with a simple show page, I wanted to implement bootstraps modals to be each users show page. This was technically challenging since I could not use rails magic to create a show page for each user. I solved this problem by iterating through each user and creating a unique modal id with the user id. Then to ensure that each marker had the correct modal, I included the modal id within the javascript loop that created each popup.
              </p>
            </div>
            <div class="col-xs-10 col-xs-offset-1 zeto-gallery2">
            </div>
            <div class="col-xs-8 col-xs-offset-2 piece-summary-container">
              <p>
                Zeto is also a platform for users to share events that are happening within their respective cities as well as post any job leads that they may come across. Posts are easily identifiable on the map by different color markers. Users are also able to view all posts, posts they are authors of and events they are attending.
              </p>
            </div>
            <div class="col-xs-10 col-xs-offset-1 zeto-gallery3">
            </div>
            <div class="col-xs-8 col-xs-offset-2 piece-summary-container">
              <p>
                Detail page of a event post or a job lead. Only authors of the post will be able to edit or delete the respective post.
              </p>
            </div>
            <div class="col-xs-10 col-xs-offset-1 zeto-gallery4">
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <div class="modal fade" id="sixTwelveModal" tabindex="-1" role="dialog" aria-labelledby="sixTwelveModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
          <h4 class="modal-title" id="sixTwelveModalLabel">sixtwelve</h4>
        </div>
        <div class="modal-body">
          <div class="row">
            <div class="col-xs-8 col-xs-offset-2 piece-summary-container">
              <h1>Summary</h1>
              <p>
                I sought to create my first web application just after a week of learning Ruby on Rails. I was initially approached with a problem that a church in Southern California was having regarding the ability to share prayers amongst groups within a single church. sixtwelve was created to address this issue for them. The goal for sixtwelve was to create a medium for groups to share their prayers exclusively with their group members. When planning the user stories and database for this web app, I took into consideration scalability for this web application.
              </p>
            </div>
            <div class="col-xs-8 col-xs-offset-2 piece-summary-container">
              <p>
                Members are given access to a group after an admin or moderator approves of their request to join. Once admitted to a group, members can see other members, share prayer requests and comment on those requests.
              </p>
            </div>
            <div class="col-xs-10 col-xs-offset-1 sixtwelve-gallery1">
            </div>
            <div class="col-xs-8 col-xs-offset-2 piece-summary-container">
              <p>
                sixtwelve uses Facebook omniauth for user authentication. For email, I used mandrill for production.
              </p>
            </div>
            <div class="col-xs-10 col-xs-offset-1 sixtwelve-gallery2">
            </div>
            <div class="col-xs-8 col-xs-offset-2 piece-summary-container">
              <p>
                Looking for a web developer position!
              </p>
            </div>
            <div class="col-xs-10 col-xs-offset-1 sixtwelve-gallery3">
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

<div class="modal fade" id="minesweeperModal" tabindex="-1" role="dialog" aria-labelledby="minesweeperModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
          <h4 class="modal-title" id="minesweeperModalLabel">minesweeper</h4>
        </div>
        <div class="modal-body">
          <div class="row">
            <div class="col-xs-8 col-xs-offset-2 piece-summary-container">
              <h1>Summary</h1>
              <p>
                Recreated minesweeper using Gosu library to handle the graphics and input code. Provided with the setup code and a bare-bones implementation of the Minefield class, I was tasked to create a functional game. Minesweeper was built with Gosu and Ruby.
              </p>
            </div>
            <div class="col-xs-10 col-xs-offset-1 minesweeper-gallery1">
            </div>
            <div class="col-xs-10 col-xs-offset-1 minesweeper-gallery2">
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <div class="modal fade" id="blackJackModal" tabindex="-1" role="dialog" aria-labelledby="blackJackModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
          <h4 class="modal-title" id="blackJackModalLabel">Black Jack</h4>
        </div>
        <div class="modal-body">
          <div class="row">
            <div class="col-xs-8 col-xs-offset-2 piece-summary-container">
              <h1>Summary</h1>
              <p>
              </p>
            </div>
            <div class="col-xs-10 col-xs-offset-1">
            </div>
            <div class="col-xs-10 col-xs-offset-1">
            </div>
            <div class="col-xs-10 col-xs-offset-1">
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

</div>
